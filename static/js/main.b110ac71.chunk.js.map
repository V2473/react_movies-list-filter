{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search/Search.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Search","props","state","search","query","handleChange","bind","event","this","setState","target","value","length","filter","toLocaleLowerCase","includes","htmlFor","type","id","placeholder","onChange","Component","App","moviesList","moviesFromServer","searchMovies","find","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,EAAKF,MAAME,OACnBR,OAAQ,EAAKM,MAAMN,OACnBS,MAAO,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPH,EADrB,yDAWeC,GAAQ,IAAD,OAClBC,KAAKC,SAAS,CAAEL,MAAOG,EAAMG,OAAOC,QAEpC,IAAMR,EAAqC,IAA5BK,KAAKN,MAAME,MAAMQ,OAC5BJ,KAAKN,MAAMP,OACVkB,QAAO,SAAAhB,GAAK,OAAIA,EAAMZ,MACpB6B,oBAAoBC,SAAS,EAAKb,MAAME,MAAMU,sBAC5CjB,EAAMX,YACN4B,oBAAoBC,SAAS,EAAKb,MAAME,MAAMU,wBACnDN,KAAKN,MAAMP,OAEfa,KAAKN,MAAMC,OAAOA,KAtBtB,+BA0BI,OACE,yBAAKd,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO2B,QAAQ,eAAe3B,UAAU,SAAxC,eAEGmB,KAAKN,MAAME,OAGd,yBAAKf,UAAU,WACb,2BACE4B,KAAK,OACLC,GAAG,eACH7B,UAAU,QACV8B,YAAY,mBACZC,SAAUZ,KAAKH,sBAxC7B,GAA4BgB,cA6D5BrB,EAAOP,aAAe,CACpBE,OAAQ,I,WC5DG2B,EAAb,4MACEpB,MAAQ,CACNqB,WAAYC,GAFhB,EAKEC,aAAe,SAACtB,GACd,EAAKM,SAAS,CAAEiB,KAAMvB,KAN1B,uDAUI,OACE,yBAAKd,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAQM,OAAQa,KAAKN,MAAMqB,WAAYpB,OAAQK,KAAKiB,eACpD,kBAAC,EAAD,CAAY9B,OAAQa,KAAKN,MAAMwB,KAC3BlB,KAAKN,MAAMwB,KACXlB,KAAKN,MAAMqB,cAGjB,yBAAKlC,UAAU,WAAf,0BAnBR,GAAyBgC,aCDzBM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b110ac71.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.scss';\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: this.props.search,\n      movies: this.props.movies,\n      query: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ query: event.target.value });\n\n    const search = this.state.query.length !== 0\n      ? this.state.movies\n        .filter(movie => movie.title\n          .toLocaleLowerCase().includes(this.state.query.toLocaleLowerCase())\n          || movie.description\n            .toLocaleLowerCase().includes(this.state.query.toLocaleLowerCase()))\n      : this.state.movies;\n\n    this.state.search(search);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n            {this.state.query}\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  search: PropTypes.instanceOf(Function).isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nSearch.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { Search } from './components/Search';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    moviesList: moviesFromServer,\n  };\n\n  searchMovies = (search) => {\n    this.setState({ find: search });\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <Search movies={this.state.moviesList} search={this.searchMovies} />\n          <MoviesList movies={this.state.find\n            ? this.state.find\n            : this.state.moviesList}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}